openapi: 3.0.1
info:
  title: 'GoogleFormsApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/Account/IsLoggedInn:
    get:
      tags:
        - Account
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Account/IsLoggedIn:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
  /api/Account/Register:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '200':
          description: Success
  /api/Account/Login:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
  /api/Account/Log-out:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
  /api/Form/test:
    get:
      tags:
        - Form
      responses:
        '200':
          description: Success
  /api/Form:
    get:
      tags:
        - Form
      parameters:
        - name: Title
          in: query
          schema:
            type: string
        - name: Description
          in: query
          schema:
            type: string
        - name: HolderId
          in: query
          schema:
            type: string
            format: uuid
        - name: LastUpdated
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
    post:
      tags:
        - Form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddFormRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddFormRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddFormRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddFormRequest'
      responses:
        '200':
          description: Success
  '/api/Form/{id}':
    get:
      tags:
        - Form
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    put:
      tags:
        - Form
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateFormRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFormRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateFormRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateFormRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Form
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Photo:
    post:
      tags:
        - Photo
      parameters:
        - name: isMain
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
      responses:
        '200':
          description: Success
  '/api/Photo/{id}':
    delete:
      tags:
        - Photo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/Question/{formId}':
    get:
      tags:
        - Question
      parameters:
        - name: formId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    post:
      tags:
        - Question
      parameters:
        - name: formId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddQuestionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddQuestionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddQuestionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddQuestionRequest'
      responses:
        '200':
          description: Success
  '/api/Question/{id}':
    put:
      tags:
        - Question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateQuestionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuestionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateQuestionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateQuestionRequest'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  '/api/Response/{formId}':
    post:
      tags:
        - Response
      parameters:
        - name: formId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAnswerRequest'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAnswerRequest'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAnswerRequest'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddAnswerRequest'
      responses:
        '200':
          description: Success
  '/api/User/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/UserForm:
    get:
      tags:
        - UserForm
      responses:
        '200':
          description: Success
  '/api/UserForm/{formId}':
    get:
      tags:
        - UserForm
      parameters:
        - name: formId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  '/api/UserForm/{id}':
    delete:
      tags:
        - UserForm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
components:
  schemas:
    AddAnswerRequest:
      type: object
      properties:
        value:
          type: string
          nullable: true
        questionId:
          type: string
          format: uuid
      additionalProperties: false
    AddFormRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        closed:
          type: boolean
        description:
          type: string
          nullable: true
      additionalProperties: false
    AddQuestionRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        confirmPassword:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
      additionalProperties: false
    UpdateFormRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        closed:
          type: boolean
        description:
          type: string
          nullable: true
      additionalProperties: false
    UpdateQuestionRequest:
      type: object
      properties:
        description:
          type: string
          nullable: true
      additionalProperties: false